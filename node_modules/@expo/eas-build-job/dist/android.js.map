{"version":3,"file":"android.js","sourceRoot":"","sources":["../src/android.ts"],"names":[],"mappings":"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","sourcesContent":["import Joi from 'joi';\n\nimport {\n  ArchiveSource,\n  ArchiveSourceSchema,\n  Env,\n  EnvSchema,\n  Platform,\n  Workflow,\n  Cache,\n  CacheSchema,\n} from './common';\n\nexport interface Keystore {\n  dataBase64: string;\n  keystorePassword: string;\n  keyAlias: string;\n  keyPassword?: string;\n}\n\nconst KeystoreSchema = Joi.object({\n  dataBase64: Joi.string().required(),\n  keystorePassword: Joi.string().allow('').required(),\n  keyAlias: Joi.string().required(),\n  keyPassword: Joi.string().allow(''),\n});\n\nexport enum BuildType {\n  APK = 'apk',\n  APP_BUNDLE = 'app-bundle',\n}\n\nexport const builderBaseImages = [\n  'default',\n  'latest',\n  'stable',\n  'ubuntu-18.04-android-30-ndk-r19c', // legacy naming (image with java 8)\n  'ubuntu-20.04-android-30-ndk-r21e', // legacy naming (image with java 8)\n  'ubuntu-18.04-jdk-8-ndk-r19c',\n  'ubuntu-18.04-jdk-11-ndk-r19c',\n  'ubuntu-20.04-jdk-8-ndk-r21e',\n  'ubuntu-20.04-jdk-11-ndk-r21e',\n  'ubuntu-22.04-jdk-8-ndk-r21e',\n  'ubuntu-22.04-jdk-11-ndk-r21e',\n] as const;\n\ninterface ImageMatchRule {\n  image: typeof builderBaseImages[number];\n  reactNativeSemverRange: string;\n  sdkSemverRange: string;\n}\n\nexport const reactNativeImageMatchRules: ImageMatchRule[] = [\n  {\n    image: 'ubuntu-18.04-jdk-11-ndk-r19c',\n    reactNativeSemverRange: '>=0.68.0',\n    sdkSemverRange: '<46',\n  },\n  {\n    image: 'ubuntu-18.04-jdk-8-ndk-r19c',\n    reactNativeSemverRange: '<0.68.0',\n    sdkSemverRange: '<46',\n  },\n  {\n    image: 'ubuntu-20.04-jdk-11-ndk-r21e',\n    reactNativeSemverRange: '>=0.68.0',\n    sdkSemverRange: '>=46',\n  },\n  {\n    image: 'ubuntu-20.04-jdk-8-ndk-r21e',\n    reactNativeSemverRange: '<0.68.0',\n    sdkSemverRange: '>=46',\n  },\n];\n\nexport interface BuilderEnvironment {\n  image?: typeof builderBaseImages[number];\n  node?: string;\n  yarn?: string;\n  expoCli?: string;\n  ndk?: string;\n  env?: Env;\n}\n\nconst BuilderEnvironmentSchema = Joi.object({\n  image: Joi.string().valid(...builderBaseImages),\n  node: Joi.string(),\n  yarn: Joi.string(),\n  expoCli: Joi.string(),\n  ndk: Joi.string(),\n  env: EnvSchema,\n});\n\nexport interface Job {\n  type: Workflow;\n  projectArchive: ArchiveSource;\n  platform: Platform.ANDROID;\n  projectRootDirectory: string;\n  releaseChannel?: string;\n  updates?: {\n    channel?: string;\n  };\n  secrets: {\n    buildCredentials?: {\n      keystore: Keystore;\n    };\n    environmentSecrets?: Env;\n  };\n  builderEnvironment?: BuilderEnvironment;\n  cache: Cache;\n  developmentClient?: boolean;\n  version?: {\n    versionCode?: string;\n    /**\n     * support for this field is implemented, but specifying it is disabled on schema level\n     */\n    versionName?: string;\n    /**\n     * support for this field is implemented, but specifying it is disabled on schema level\n     */\n    runtimeVersion?: string;\n  };\n  buildArtifactPaths?: string[];\n\n  gradleCommand?: string;\n  applicationArchivePath?: string;\n\n  buildType?: BuildType;\n  username?: string;\n\n  experimental?: {\n    prebuildCommand?: string;\n  };\n}\n\nexport const JobSchema = Joi.object({\n  type: Joi.string()\n    .valid(...Object.values(Workflow))\n    .required(),\n  projectArchive: ArchiveSourceSchema.required(),\n  platform: Joi.string().valid(Platform.ANDROID).required(),\n  projectRootDirectory: Joi.string().required(),\n  releaseChannel: Joi.string(),\n  updates: Joi.object({\n    channel: Joi.string(),\n  }),\n  secrets: Joi.object({\n    buildCredentials: Joi.object({ keystore: KeystoreSchema.required() }),\n    environmentSecrets: EnvSchema,\n  }).required(),\n  builderEnvironment: BuilderEnvironmentSchema,\n  cache: CacheSchema.default(),\n  developmentClient: Joi.boolean(),\n  version: Joi.object({\n    versionCode: Joi.string().regex(/^\\d+$/),\n  }),\n  buildArtifactPaths: Joi.array().items(Joi.string()),\n\n  gradleCommand: Joi.string(),\n  applicationArchivePath: Joi.string(),\n\n  buildType: Joi.string().valid(...Object.values(BuildType)),\n  username: Joi.string(),\n\n  experimental: Joi.object({\n    prebuildCommand: Joi.string(),\n  }),\n}).oxor('releaseChannel', 'updates.channel');\n"]}