"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BranchQuery = void 0;
const tslib_1 = require("tslib");
const graphql_1 = require("graphql");
const graphql_tag_1 = tslib_1.__importDefault(require("graphql-tag"));
const client_1 = require("../client");
const UpdateBranch_1 = require("../types/UpdateBranch");
exports.BranchQuery = {
    async getBranchByNameAsync({ appId, name, }) {
        const { app: { byId: { updateBranchByName: branch }, }, } = await (0, client_1.withErrorHandlingAsync)(client_1.graphqlClient
            .query((0, graphql_tag_1.default) `
            query ViewBranch($appId: String!, $name: String!) {
              app {
                byId(appId: $appId) {
                  id
                  updateBranchByName(name: $name) {
                    id
                    name
                  }
                }
              }
            }
          `, {
            appId,
            name,
        }, { additionalTypenames: ['UpdateBranch'] })
            .toPromise());
        return branch;
    },
    async listBranchesAsync({ appId, limit, offset, }) {
        var _a, _b;
        const data = await (0, client_1.withErrorHandlingAsync)(client_1.graphqlClient
            .query((0, graphql_tag_1.default) `
            query BranchesByAppQuery($appId: String!, $limit: Int!, $offset: Int!) {
              app {
                byId(appId: $appId) {
                  id
                  updateBranches(limit: $limit, offset: $offset) {
                    id
                    ...UpdateBranchFragment
                  }
                }
              }
            }
            ${(0, graphql_1.print)(UpdateBranch_1.UpdateBranchFragmentNode)}
          `, {
            appId,
            limit,
            offset,
        }, { additionalTypenames: ['UpdateBranch'] })
            .toPromise());
        return (_b = (_a = data === null || data === void 0 ? void 0 : data.app) === null || _a === void 0 ? void 0 : _a.byId.updateBranches) !== null && _b !== void 0 ? _b : [];
    },
};
