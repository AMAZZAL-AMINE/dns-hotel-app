"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureMetadataAppStoreAuthenticatedAsync = exports.createMetadataContextAsync = void 0;
const tslib_1 = require("tslib");
const apple_utils_1 = require("@expo/apple-utils");
const eas_build_job_1 = require("@expo/eas-build-job");
const eas_json_1 = require("@expo/eas-json");
const assert_1 = tslib_1.__importDefault(require("assert"));
const authenticate_1 = require("../credentials/ios/appstore/authenticate");
const expoConfig_1 = require("../project/expoConfig");
const bundleIdentifier_1 = require("../project/ios/bundleIdentifier");
const actions_1 = require("../user/actions");
/**
 * Metadata uses the submission profile to find the configured metadata filename.
 * Note, only iOS is supported for metadata right now.
 */
async function createMetadataContextAsync(params) {
    var _a, _b, _c;
    const easJsonReader = new eas_json_1.EasJsonReader(params.projectDir);
    const submitProfile = await easJsonReader.getSubmitProfileAsync(eas_build_job_1.Platform.IOS, params.profileName);
    const exp = (_a = params.exp) !== null && _a !== void 0 ? _a : (0, expoConfig_1.getExpoConfig)(params.projectDir);
    const user = await (0, actions_1.ensureLoggedInAsync)();
    const bundleIdentifier = (_b = submitProfile.bundleIdentifier) !== null && _b !== void 0 ? _b : (await (0, bundleIdentifier_1.getBundleIdentifierAsync)(params.projectDir, exp));
    return {
        platform: eas_build_job_1.Platform.IOS,
        profile: submitProfile,
        metadataPath: (_c = submitProfile.metadataPath) !== null && _c !== void 0 ? _c : 'store.config.json',
        user,
        credentialsCtx: params.credentialsCtx,
        bundleIdentifier,
        projectDir: params.projectDir,
        exp,
    };
}
exports.createMetadataContextAsync = createMetadataContextAsync;
/**
 * To start syncing ASC entities, we need access to the apple utils App instance.
 * This ensures we are authenticated and have the app instance ready to use.
 */
async function ensureMetadataAppStoreAuthenticatedAsync({ credentialsCtx, bundleIdentifier, }) {
    const authCtx = await credentialsCtx.appStore.ensureAuthenticatedAsync();
    (0, assert_1.default)(authCtx.authState, 'Failed to authenticate with App Store Connect');
    // TODO: improve error handling by mentioning possible configuration errors
    const app = await apple_utils_1.App.findAsync((0, authenticate_1.getRequestContext)(authCtx), { bundleId: bundleIdentifier });
    (0, assert_1.default)(app, `Failed to load app "${bundleIdentifier}" from App Store Connect`);
    return { app, auth: authCtx.authState };
}
exports.ensureMetadataAppStoreAuthenticatedAsync = ensureMetadataAppStoreAuthenticatedAsync;
