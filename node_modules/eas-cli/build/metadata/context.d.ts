/// <reference types="@expo/apple-utils/ts-declarations/expo__app-store" />
import { App, Session } from '@expo/apple-utils';
import { ExpoConfig } from '@expo/config';
import { Platform } from '@expo/eas-build-job';
import { SubmitProfile } from '@expo/eas-json';
import { CredentialsContext } from '../credentials/context';
import { Actor } from '../user/User';
export declare type MetadataContext = {
    /** Submission profile platform to use */
    platform: Platform.IOS;
    /** Resolved submission profile configuration */
    profile: SubmitProfile<Platform.IOS>;
    /** Configured store config path, relative from projectDir (defaults to store.config.json) */
    metadataPath: string;
    /** Authenticated Expo account */
    user: Actor;
    /** The store credentials manager */
    credentialsCtx: CredentialsContext;
    /** The app bundle identifier to use for the store */
    bundleIdentifier: string;
    /** Root of the Expo project directory */
    projectDir: string;
    /** Resolved Expo app configuration */
    exp: ExpoConfig;
};
export declare type MetadataAppStoreAuthentication = {
    /** The root entity of the App store */
    app: App;
    /** The authentication state we used to fetch the root entity */
    auth: Partial<Session.AuthState>;
};
/**
 * Metadata uses the submission profile to find the configured metadata filename.
 * Note, only iOS is supported for metadata right now.
 */
export declare function createMetadataContextAsync(params: {
    projectDir: string;
    credentialsCtx: CredentialsContext;
    exp?: ExpoConfig;
    profileName?: string;
}): Promise<MetadataContext>;
/**
 * To start syncing ASC entities, we need access to the apple utils App instance.
 * This ensures we are authenticated and have the app instance ready to use.
 */
export declare function ensureMetadataAppStoreAuthenticatedAsync({ credentialsCtx, bundleIdentifier, }: MetadataContext): Promise<MetadataAppStoreAuthentication>;
